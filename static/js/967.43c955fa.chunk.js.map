{"version":3,"file":"static/js/967.43c955fa.chunk.js","mappings":"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","sources":["components/GalleryListItem/GalleryListItem.styled.js","components/GalleryListItem/GalleryListItem.js","components/GalleryList/GalleryList.js","components/Loader/Loader.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  display: inline-block;\n  width: 100%;\n  padding: 10px;\n  border-radius: 10px;\n  color: #000000;\n  &:hover,\n  &:focus {\n    background-color: #f94500;\n    color: #ffffff;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, Link } from './GalleryListItem.styled';\n\nexport const GalleryListItem = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </Item>\n  );\n};\n\nGalleryListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};","import { GalleryListItem } from 'components/GalleryListItem/GalleryListItem';\nimport PropTypes from 'prop-types';\n\nexport const Gallery = ({ gallery }) => {\n  return (\n    <ul>\n      {gallery.map(({ id, title }) => {\n        return <GalleryListItem key={id} id={id} title={title} />;\n      })}\n    </ul>\n  );\n};\n\nGallery.propTypes = {\n  gallery: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"200\"\n      width=\"200\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{\n        marginTop: 100,\n        marginLeft: 400,\n      }}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Header = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #f94500;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  display: inline-block;\n  padding: 5px;\n  position: relative;\n  width: 25px;\n  height: 25px;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`;","import {\n    ButtonSearch,\n    Header,\n    Icon,\n    SearchForm,\n    SearchFormInput,\n  } from './SearchBar.styled.js';\n  import PropTypes from 'prop-types';\n  import { useState } from 'react';\n  \n  export const Searchbar = ({ onSubmit }) => {\n    const [searchWord, setSearchWord] = useState('');\n  \n    const reset = () => {\n      setSearchWord('');\n    };\n  \n    const handleChange = e => {\n      const { value } = e.target;\n      setSearchWord(value);\n    };\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if (searchWord.trim() === '') {\n        alert('Enter valid text');\n        return;\n      }\n      onSubmit(searchWord.toLowerCase());\n      reset();\n    };\n  \n    return (\n      <Header>\n        <SearchForm autoComplete=\"of\" onSubmit={handleSubmit}>\n          <label htmlFor=\"searchWord\"></label>\n          <SearchFormInput\n            id=\"searchWord\"\n            type=\"text\"\n            onChange={handleChange}\n            autoFocus\n            name=\"searchWord\"\n            placeholder=\"Search movie\"\n            value={searchWord}\n          />\n          <ButtonSearch type=\"submit\">\n            <Icon />\n          </ButtonSearch>\n        </SearchForm>\n      </Header>\n    );\n  };\n  \n  Searchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { Gallery } from 'components/GalleryList/GalleryList';\nimport { useEffect, useState } from 'react';\nimport * as API from '../services/api';\nimport { Notification } from 'components/Notification/Notification';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [gallery, setGallery] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('start');\n  const searchWord = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchWord) {\n      return;\n    }\n\n    const fetch = async () => {\n      try {\n        setStatus('loading');\n        setIsLoading(true);\n        const galleryList = await API.getMovieBySearchWord(searchWord);\n        setGallery(galleryList);\n        setIsLoading(false);\n        setStatus('end');\n      } catch (error) {\n        setError(true);\n        setIsLoading(false);\n        setStatus('end');\n        throw new Error(error);\n      }\n    };\n\n    fetch();\n  }, [searchParams, searchWord]);\n\n  const onSubmit = query => {\n    setSearchParams(query !== '' ? { query } : {});\n    setGallery([]);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n      {gallery.length > 0 && <Gallery gallery={gallery} />}\n      {error && (\n        <Notification message=\"No results!!!Please, enter another word\" />\n      )}\n      {status === 'end' && gallery.length === 0 && (\n        <Notification message=\"No results!!!Please, enter another word\" />\n      )}\n      {status === 'start' && <Notification message=\"Please, enter key word\" />}\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\nconst API_KEY = '6ba36a748b2732ff7e412bd3bc6f6fd3';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const { title, overview, poster_path, vote_average, genres, release_date } =\n    data;\n  return { title, overview, poster_path, vote_average, genres, release_date };\n};\n\nexport const getMovieByActors = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, profile_path, character }) => ({\n    name,\n    profile_path,\n    character,\n  }));\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n\nexport const getMovieBySearchWord = async searchWord => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${searchWord}&page=1&include_adult=false`\n  );\n  return results.map(({ title, id }) => ({ title, id }));\n};"],"names":["Item","styled","Link","NavLink","GalleryListItem","id","title","location","useLocation","to","state","from","Gallery","gallery","map","Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","wrapperClass","glassColor","color","Header","SearchForm","SearchFormInput","ButtonSearch","Icon","HiSearch","Searchbar","onSubmit","useState","searchWord","setSearchWord","autoComplete","e","preventDefault","trim","toLowerCase","alert","htmlFor","type","onChange","value","target","autoFocus","name","placeholder","useSearchParams","searchParams","setSearchParams","setGallery","error","setError","isLoading","setIsLoading","status","setStatus","get","useEffect","fetch","API","galleryList","Error","query","length","Notification","message","API_KEY","axios","getTrendingFilms","results","data","getMovieById","overview","poster_path","vote_average","genres","release_date","getMovieByActors","cast","profile_path","character","getMovieByReviews","author","content","getMovieBySearchWord"],"sourceRoot":""}