{"version":3,"file":"static/js/336.9269e049.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/MovieCard/MoviesCard.styled.js","components/MovieCard/MovieCard.js","pages/MoviesDetails.js","services/api.js"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"200\"\n      width=\"200\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{\n        marginTop: 100,\n        marginLeft: 400,\n      }}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  color: black;\n  background-color: #a8a8a8;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 12px;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  :hover {\n    background-color: orangered;\n    color: #ffffff;\n  }\n`;","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  children: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  justify-content: centre;\n  align-items: centre;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 100%;\n  width: 500px;\n`;","import { Container, ImageContainer } from './MoviesCard.styled';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const { title, overview, poster_path, vote_average, genres, release_date } =\n    movie;\n  const releaseDate = release_date.slice(0, 4);\n  const posterPath =\n    poster_path !== null\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://www.bworldonline.com/wp-content/uploads/2022/04/cinema02_14-01.jpg';\n  const voteAverage = vote_average.toFixed(0) * 10;\n  const genresList =\n    genres.length > 0\n      ? genres.map(({ name }) => name).join(', ')\n      : 'No information';\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <ImageContainer>\n          <img src={posterPath} alt={title} width=\"500\" height=\"700\" />\n        </ImageContainer>\n        <div>\n          <h2>\n            {title} ({releaseDate})\n          </h2>\n          <p>\n            User Score: <span>{voteAverage}%</span>{' '}\n          </p>\n          <b>Overview:</b>\n          <p>{overview}</p>\n          <b>Genres:</b>\n          <p>{genresList}</p>\n        </div>\n      </Container>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.array.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n};","import { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Notification } from 'components/Notification/Notification';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport * as API from '../services/api';\n\nconst MoviesDetails = () => {\n  const location = useLocation();\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setIsLoading(true);\n        const response = await API.getMovieById(moviesId);\n        setMovie(response);\n        setIsLoading(false);\n      } catch (error) {\n        setError(true);\n        setIsLoading(false);\n        throw new Error(error);\n      }\n    };\n    fetch();\n  }, [moviesId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <main>\n      {error && (\n        <>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <Notification message=\"Please, try again\" />\n        </>\n      )}\n      {isLoading && <Loader />}\n      {!isLoading && !error && movie && (\n        <>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <MovieCard movie={movie} />\n        </>\n      )}\n      <Suspense fallback={<Notification message=\"Loading subpage...\" />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MoviesDetails;","import axios from 'axios';\nconst API_KEY = '959942d7ed3f5c96912a03c758c47388';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const { title, overview, poster_path, vote_average, genres, release_date } =\n    data;\n  return { title, overview, poster_path, vote_average, genres, release_date };\n};\n\nexport const getMovieByActors = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, profile_path, character }) => ({\n    name,\n    profile_path,\n    character,\n  }));\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n\nexport const getMovieBySearchWord = async searchWord => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${searchWord}&page=1&include_adult=false`\n  );\n  return results.map(({ title, id }) => ({ title, id }));\n};"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","wrapperClass","glassColor","color","StyledLink","styled","Link","BackLink","to","children","size","Container","ImageContainer","MovieCard","movie","location","useLocation","title","overview","poster_path","vote_average","genres","releaseDate","release_date","slice","posterPath","voteAverage","toFixed","genresList","length","map","name","join","backLinkHref","state","from","src","alt","moviesId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","fetch","API","response","Error","Notification","message","Suspense","fallback","API_KEY","axios","getTrendingFilms","results","data","id","getMovieById","getMovieByActors","cast","profile_path","character","getMovieByReviews","author","content","getMovieBySearchWord","searchWord"],"sourceRoot":""}